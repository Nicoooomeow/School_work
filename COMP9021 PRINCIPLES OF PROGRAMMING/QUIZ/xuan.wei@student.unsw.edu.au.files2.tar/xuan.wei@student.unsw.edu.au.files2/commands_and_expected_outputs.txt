TEST 1 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(93, 10); print(maps_to(values, 8))'
10
TEST 1 END

TEST 2 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(94, 20); print(maps_to(values, 12))'
5
TEST 2 END

TEST 3 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(95, 31); print(maps_to(values, 6))'
9
TEST 3 END

TEST 4 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(96, 42); print(maps_to(values, 15))'
19
TEST 4 END

TEST 5 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(97, 53); print(maps_to(values, 40))'
1
TEST 5 END

TEST 6 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(98, 1); print(length_of_cycle_containing(values, 1))'
1
TEST 6 END

TEST 7 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(99, 2); print(length_of_cycle_containing(values, 1))'
1
TEST 7 END

TEST 8 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(100, 3); print(length_of_cycle_containing(values, 3))'
2
TEST 8 END

TEST 9 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(101, 11); print(length_of_cycle_containing(values, 7))'
8
TEST 9 END

TEST 10 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(102, 28); print(length_of_cycle_containing(values, 11))'
25
TEST 10 END

TEST 11 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(103, 43); print(length_of_cycle_containing(values, 32))'
20
TEST 11 END

TEST 12 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(104, 567); print(length_of_cycle_containing(values, 111))'
306
TEST 12 END

TEST 13 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(105, 8902); print(length_of_cycle_containing(values, 19))'
2190
TEST 13 END

TEST 14 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(106, 56123); print(length_of_cycle_containing(values, 1000))'
44108
TEST 14 END

TEST 15 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(106, 74209); print(length_of_cycle_containing(values, 56323))'
313298
TEST 15 END

TEST 16 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(107, 43); print(analyse(values))'
[0, 37, 37, 37, 5, 37, 37, 37, 37, 37, 37, 5, 37, 37, 37, 37, 5, 37, 37, 37, 37, 37, 37, 37, 37, 37, 5, 37, 37, 37, 37, 37, 37, 37, 37, 1, 37, 37, 37, 37, 37, 37, 37, 5]
TEST 16 END

TEST 17 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(108, 167); print(analyse(values))'
[0, 31, 50, 50, 31, 82, 4, 82, 82, 82, 50, 50, 31, 31, 82, 50, 50, 50, 50, 50, 31, 31, 82, 82, 82, 50, 31, 31, 82, 31, 50, 31, 50, 82, 31, 50, 82, 82, 50, 82, 82, 82, 82, 82, 82, 82, 50, 82, 82, 50, 82, 82, 82, 31, 82, 50, 82, 82, 50, 82, 31, 82, 82, 82, 31, 31, 82, 31, 50, 82, 82, 82, 31, 82, 82, 82, 31, 50, 82, 82, 82, 82, 82, 82, 50, 4, 82, 50, 82, 82, 50, 31, 82, 82, 50, 82, 82, 82, 50, 82, 31, 82, 50, 82, 50, 82, 82, 50, 82, 50, 50, 31, 82, 82, 82, 50, 50, 82, 31, 82, 50, 50, 50, 82, 50, 82, 82, 31, 50, 82, 50, 31, 50, 50, 4, 50, 82, 31, 82, 82, 4, 82, 82, 50, 50, 50, 31, 82, 31, 31, 50, 50, 82, 50, 31, 50, 82, 82, 82, 50, 50, 31, 82, 82, 82, 82, 82, 31]
TEST 17 END

TEST 18 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(308, 560); print(analyse(values))'
[0, 306, 306, 306, 306, 163, 306, 54, 163, 54, 54, 163, 163, 54, 306, 163, 163, 306, 306, 306, 306, 54, 163, 31, 306, 306, 31, 306, 163, 163, 54, 306, 306, 306, 306, 306, 306, 306, 306, 163, 163, 163, 163, 163, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 54, 306, 163, 306, 306, 306, 306, 306, 163, 306, 306, 306, 306, 306, 306, 306, 306, 306, 31, 31, 306, 54, 163, 306, 306, 31, 306, 306, 163, 306, 306, 163, 306, 306, 306, 306, 5, 31, 306, 306, 306, 54, 306, 306, 306, 306, 163, 306, 306, 163, 163, 54, 163, 54, 163, 306, 31, 306, 54, 163, 306, 31, 306, 163, 306, 163, 1, 163, 54, 31, 306, 306, 54, 306, 163, 306, 306, 54, 306, 306, 163, 163, 306, 306, 306, 306, 306, 306, 163, 163, 306, 54, 306, 306, 306, 306, 163, 163, 163, 306, 163, 306, 163, 163, 306, 163, 306, 163, 306, 163, 306, 163, 306, 163, 163, 54, 306, 163, 306, 306, 306, 163, 163, 31, 306, 306, 306, 306, 306, 306, 163, 31, 163, 306, 306, 163, 306, 163, 306, 163, 163, 306, 306, 54, 163, 31, 306, 163, 306, 306, 306, 54, 306, 306, 163, 306, 306, 54, 31, 306, 306, 54, 163, 163, 306, 306, 163, 306, 306, 306, 306, 163, 306, 306, 306, 163, 306, 306, 306, 306, 163, 163, 306, 306, 163, 31, 306, 163, 163, 163, 163, 54, 31, 163, 163, 306, 306, 306, 163, 306, 163, 163, 163, 163, 306, 163, 163, 306, 54, 306, 163, 163, 306, 163, 306, 306, 306, 306, 306, 306, 54, 306, 163, 163, 306, 306, 163, 306, 31, 306, 306, 163, 306, 163, 306, 306, 306, 306, 54, 31, 306, 163, 306, 163, 306, 306, 54, 306, 163, 306, 306, 163, 306, 306, 163, 163, 306, 306, 306, 31, 306, 31, 163, 306, 306, 54, 163, 306, 306, 54, 163, 54, 306, 306, 306, 306, 306, 54, 306, 54, 31, 163, 306, 306, 306, 306, 306, 306, 306, 306, 306, 5, 306, 54, 306, 306, 54, 54, 163, 163, 306, 306, 31, 163, 306, 163, 31, 306, 306, 306, 54, 54, 306, 163, 306, 163, 306, 306, 31, 306, 163, 163, 306, 306, 163, 306, 163, 306, 306, 306, 54, 306, 306, 306, 306, 306, 306, 54, 306, 306, 306, 306, 306, 306, 163, 306, 306, 306, 306, 306, 163, 54, 306, 306, 163, 163, 306, 54, 31, 306, 163, 306, 54, 306, 306, 163, 163, 163, 306, 163, 163, 306, 306, 306, 54, 306, 306, 54, 163, 306, 306, 163, 306, 163, 306, 163, 54, 306, 306, 5, 163, 163, 163, 306, 306, 163, 163, 306, 163, 306, 306, 306, 163, 306, 306, 306, 163, 31, 306, 163, 306, 306, 31, 306, 306, 306, 31, 306, 306, 31, 163, 163, 54, 306, 163, 163, 163, 306, 163, 306, 54, 306, 163, 306, 306, 54, 163, 54, 54, 163, 163, 163, 31, 306, 163, 306, 306, 163, 306, 306, 163, 163, 306, 306, 163, 306, 163, 163, 163, 306, 306, 306, 163, 163, 306, 306, 163, 306, 306, 31, 306, 306, 163, 31, 306, 306, 163, 54, 163, 306, 163, 306, 54, 54, 163, 163, 163, 306, 306, 163, 5, 5, 163, 306, 163, 306, 54, 306, 306, 306, 306, 306, 306, 54, 163, 163, 306]
TEST 18 END

TEST 19 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(109, 678); print(analyse(values)[100 : 200])'
[465, 465, 465, 110, 42, 465, 465, 465, 465, 465, 465, 465, 6, 465, 41, 110, 465, 465, 42, 465, 465, 110, 465, 465, 465, 465, 465, 465, 465, 110, 41, 465, 465, 465, 465, 465, 465, 42, 110, 110, 110, 465, 465, 465, 465, 465, 465, 465, 110, 465, 110, 110, 465, 110, 465, 465, 465, 41, 465, 42, 110, 465, 465, 465, 465, 465, 465, 110, 465, 465, 465, 465, 465, 465, 465, 465, 110, 41, 465, 41, 465, 465, 465, 465, 110, 110, 110, 110, 465, 42, 465, 465, 465, 465, 465, 110, 110, 465, 465, 110]
TEST 19 END

TEST 20 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(209, 1090); print(analyse(values)[900 : 1000])'
[664, 157, 214, 664, 25, 4, 157, 664, 5, 664, 664, 157, 214, 5, 4, 664, 664, 157, 157, 157, 214, 157, 664, 664, 664, 664, 214, 214, 664, 664, 214, 664, 664, 214, 664, 214, 157, 664, 664, 214, 157, 664, 214, 664, 214, 214, 214, 664, 664, 664, 17, 214, 25, 664, 214, 214, 214, 664, 4, 25, 664, 214, 664, 664, 214, 664, 664, 664, 214, 214, 157, 157, 664, 157, 157, 214, 214, 664, 664, 214, 214, 157, 664, 157, 157, 664, 214, 664, 664, 17, 664, 214, 664, 664, 25, 17, 664, 214, 664, 214]
TEST 20 END

TEST 21 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(110, 4529); print(analyse(values)[3000 : 3100])'
[906, 99, 1418, 906, 906, 1488, 1418, 1418, 906, 906, 1488, 1418, 1488, 235, 1418, 906, 1488, 1488, 1488, 1418, 1418, 906, 1488, 99, 906, 906, 1418, 1418, 235, 1418, 1488, 1488, 1418, 341, 1488, 1418, 1488, 1418, 1418, 906, 1488, 341, 906, 1488, 1488, 1418, 1418, 1488, 1488, 235, 1418, 906, 1418, 1418, 1418, 1488, 235, 235, 1488, 1488, 906, 99, 99, 1418, 1488, 24, 1418, 341, 1488, 1418, 906, 1418, 1418, 906, 1488, 1488, 1418, 1488, 1418, 1418, 1488, 1418, 1418, 1488, 1418, 1488, 1488, 1488, 1488, 906, 1418, 1488, 1488, 1418, 341, 1488, 906, 1488, 1488, 1488]
TEST 21 END

TEST 22 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(121, 983457); print(analyse(values)[467300 : 467400])'
[37809, 178602, 178602, 37809, 178602, 298140, 298140, 298140, 178602, 9715, 405336, 405336, 178602, 405336, 6478, 405336, 405336, 178602, 9732, 298140, 298140, 178602, 298140, 298140, 178602, 37809, 298140, 405336, 178602, 21694, 405336, 405336, 405336, 405336, 298140, 298140, 405336, 298140, 405336, 178602, 9715, 298140, 298140, 178602, 405336, 405336, 405336, 298140, 178602, 405336, 405336, 298140, 298140, 178602, 405336, 10753, 298140, 21694, 298140, 37809, 405336, 405336, 405336, 298140, 298140, 298140, 178602, 298140, 178602, 178602, 405336, 405336, 298140, 178602, 405336, 405336, 21694, 178602, 298140, 21694, 298140, 405336, 298140, 178602, 405336, 298140, 178602, 178602, 178602, 9715, 405336, 405336, 298140, 178602, 298140, 298140, 405336, 298140, 405336, 298140]
TEST 22 END

TEST 23 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(122, 1289479); print(analyse(values)[1034800 : 1034900])'
[1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 141831, 1039508, 1039508, 1039508, 141831, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 80540, 141831, 1039508, 1039508, 1039508, 80540, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 141831, 1039508, 6663, 1039508, 1039508, 141831, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 14262, 1039508, 1039508, 1039508, 141831, 1039508, 1039508, 141831, 141831, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 1039508, 141831, 1039508, 1039508, 1039508, 1038, 1039508, 1039508, 141831, 1039508, 1039508, 1039508, 1039508]
TEST 23 END

TEST 24 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(322, 7890123); print(analyse(values)[4780800 : 4780900])'
[1528093, 4623034, 1528093, 496995, 4623034, 4623034, 4623034, 1528093, 1528093, 4623034, 496995, 611296, 4623034, 1528093, 572814, 4623034, 4623034, 572814, 1528093, 572814, 1528093, 4623034, 4623034, 4623034, 4623034, 4623034, 4623034, 4623034, 4623034, 1528093, 4623034, 4623034, 4623034, 1528093, 4623034, 4623034, 4623034, 611296, 4623034, 1528093, 1528093, 611296, 4623034, 4623034, 611296, 4623034, 4623034, 4623034, 1528093, 611296, 4623034, 4623034, 4623034, 4623034, 496995, 496995, 4623034, 4623034, 4623034, 4623034, 496995, 572814, 4623034, 4623034, 4623034, 4623034, 1528093, 4623034, 1528093, 4623034, 1528093, 1528093, 4623034, 4623034, 4623034, 4623034, 611296, 1528093, 4623034, 4623034, 4623034, 1528093, 572814, 572814, 1528093, 4623034, 4623034, 4623034, 4623034, 4623034, 4623034, 4623034, 572814, 1528093, 1528093, 611296, 572814, 572814, 4623034, 4623034]
TEST 24 END

TEST 25 BEGIN
$ python3 -c 'from quiz_2 import *; values = generate_permutation(123, 9804678); print(analyse(values)[7909700 : 7909800])'
[5831213, 5831213, 5831213, 1244166, 2340082, 1244166, 1244166, 1244166, 5831213, 2340082, 5831213, 2340082, 5831213, 2340082, 5831213, 2340082, 2340082, 2340082, 5831213, 5831213, 1244166, 5831213, 5831213, 5831213, 1244166, 2340082, 2340082, 6550, 5831213, 2340082, 5831213, 5831213, 2340082, 5831213, 1244166, 5831213, 2340082, 21511, 1244166, 5831213, 5831213, 5831213, 1244166, 2340082, 5831213, 5831213, 5831213, 5831213, 5831213, 1244166, 5831213, 2340082, 2340082, 5831213, 1244166, 5831213, 5831213, 1244166, 5831213, 5831213, 91559, 5831213, 5831213, 5831213, 2340082, 2340082, 5831213, 5831213, 5831213, 5831213, 5831213, 5831213, 2340082, 2340082, 5831213, 5831213, 2340082, 5831213, 2340082, 5831213, 5831213, 5831213, 5831213, 5831213, 1244166, 5831213, 5831213, 2340082, 5831213, 2340082, 2340082, 2340082, 2340082, 1244166, 5831213, 2340082, 1244166, 2340082, 5831213, 2340082]
TEST 25 END

